# docker-compose.yml
services:
  db:
    build:
      context: ./db-init
      dockerfile: Dockerfile
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=pg_cron",
        "-c",
        "cron.database_name=taskmaster",
      ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_DB: taskmaster
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init/:/docker-entrypoint-initdb.d/
    ports:
      - "5433:5432"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      target: builder # Use 'builder' stage for development; remove for production
    env_file:
      - ./.env # Load shared variables
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app # Mount code for development
      - /app/node_modules # Anonymous volume to prevent issues with node_modules
      - ./backend/uploads:/app/uploads # Mount uploads directory
    depends_on:
      - db
      - meilisearch
    networks:
      - app-network
    command: nodemon app.js # Use nodemon for development; change to 'node app.js' for production

  frontend:
    build:
      context: ./frontend
      target: builder # Use 'builder' stage for development; remove for production
    env_file:
      - ./.env # Load shared variables
    ports:
      - "5173:5173" # Change to "80:80" for production
    volumes:
      - ./frontend:/app # Mount code for development
      - /app/node_modules # Anonymous volume
    depends_on:
      - backend
    networks:
      - app-network
    command: npm run dev # Use development server; remove for production

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: $PG_PASSWORD
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

  meilisearch:
    image: getmeili/meilisearch:latest
    env_file:
      - ./.env # Load shared variables
    environment:
      MEILI_ENV: production
      MEILI_MASTER_KEY: $MEILISEARCH_API_KEY # Use variable from env_file
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - app-network

volumes:
  db_data:
  meilisearch_data:

networks:
  app-network:
